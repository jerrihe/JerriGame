// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.11
// source: ss_login.proto

package ss

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SS_CMD_KICK_ACCOUNT_REQ = 1;
type SsCmdKickAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Reason   int32  `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
	ConnIdx  uint64 `protobuf:"varint,4,opt,name=conn_idx,json=connIdx,proto3" json:"conn_idx,omitempty"`
}

func (x *SsCmdKickAccountReq) Reset() {
	*x = SsCmdKickAccountReq{}
	mi := &file_ss_login_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SsCmdKickAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsCmdKickAccountReq) ProtoMessage() {}

func (x *SsCmdKickAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_login_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsCmdKickAccountReq.ProtoReflect.Descriptor instead.
func (*SsCmdKickAccountReq) Descriptor() ([]byte, []int) {
	return file_ss_login_proto_rawDescGZIP(), []int{0}
}

func (x *SsCmdKickAccountReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SsCmdKickAccountReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SsCmdKickAccountReq) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *SsCmdKickAccountReq) GetConnIdx() uint64 {
	if x != nil {
		return x.ConnIdx
	}
	return 0
}

// SS_CMD_KICK_ACCOUNT_RES = 2;
type SsCmdKickAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Reason   int32  `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
	ConnIdx  uint64 `protobuf:"varint,4,opt,name=conn_idx,json=connIdx,proto3" json:"conn_idx,omitempty"`
}

func (x *SsCmdKickAccountRes) Reset() {
	*x = SsCmdKickAccountRes{}
	mi := &file_ss_login_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SsCmdKickAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsCmdKickAccountRes) ProtoMessage() {}

func (x *SsCmdKickAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_login_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsCmdKickAccountRes.ProtoReflect.Descriptor instead.
func (*SsCmdKickAccountRes) Descriptor() ([]byte, []int) {
	return file_ss_login_proto_rawDescGZIP(), []int{1}
}

func (x *SsCmdKickAccountRes) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SsCmdKickAccountRes) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SsCmdKickAccountRes) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *SsCmdKickAccountRes) GetConnIdx() uint64 {
	if x != nil {
		return x.ConnIdx
	}
	return 0
}

// SS_CMD_REGISTER_SERVER_REQ = 3;
type SsCmdRegisterServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      int32  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerType    string `protobuf:"bytes,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	ServerIp      string `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ServerPort    int32  `protobuf:"varint,4,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	ServerName    string `protobuf:"bytes,5,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerDesc    string `protobuf:"bytes,6,opt,name=server_desc,json=serverDesc,proto3" json:"server_desc,omitempty"`
	ServerVersion string `protobuf:"bytes,7,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ServerKey     string `protobuf:"bytes,8,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
}

func (x *SsCmdRegisterServerReq) Reset() {
	*x = SsCmdRegisterServerReq{}
	mi := &file_ss_login_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SsCmdRegisterServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsCmdRegisterServerReq) ProtoMessage() {}

func (x *SsCmdRegisterServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_login_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsCmdRegisterServerReq.ProtoReflect.Descriptor instead.
func (*SsCmdRegisterServerReq) Descriptor() ([]byte, []int) {
	return file_ss_login_proto_rawDescGZIP(), []int{2}
}

func (x *SsCmdRegisterServerReq) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *SsCmdRegisterServerReq) GetServerType() string {
	if x != nil {
		return x.ServerType
	}
	return ""
}

func (x *SsCmdRegisterServerReq) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *SsCmdRegisterServerReq) GetServerPort() int32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *SsCmdRegisterServerReq) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *SsCmdRegisterServerReq) GetServerDesc() string {
	if x != nil {
		return x.ServerDesc
	}
	return ""
}

func (x *SsCmdRegisterServerReq) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *SsCmdRegisterServerReq) GetServerKey() string {
	if x != nil {
		return x.ServerKey
	}
	return ""
}

// SS_CMD_REGISTER_SERVER_RES = 4;
type SsCmdRegisterServerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId      string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerType    string `protobuf:"bytes,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	ServerIp      string `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ServerPort    int32  `protobuf:"varint,4,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	ServerName    string `protobuf:"bytes,5,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerDesc    string `protobuf:"bytes,6,opt,name=server_desc,json=serverDesc,proto3" json:"server_desc,omitempty"`
	ServerVersion string `protobuf:"bytes,7,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ServerKey     string `protobuf:"bytes,8,opt,name=server_key,json=serverKey,proto3" json:"server_key,omitempty"`
	Result        int32  `protobuf:"varint,9,opt,name=result,proto3" json:"result,omitempty"`
	Reason        string `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SsCmdRegisterServerRes) Reset() {
	*x = SsCmdRegisterServerRes{}
	mi := &file_ss_login_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SsCmdRegisterServerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsCmdRegisterServerRes) ProtoMessage() {}

func (x *SsCmdRegisterServerRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_login_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsCmdRegisterServerRes.ProtoReflect.Descriptor instead.
func (*SsCmdRegisterServerRes) Descriptor() ([]byte, []int) {
	return file_ss_login_proto_rawDescGZIP(), []int{3}
}

func (x *SsCmdRegisterServerRes) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerType() string {
	if x != nil {
		return x.ServerType
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerPort() int32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *SsCmdRegisterServerRes) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerDesc() string {
	if x != nil {
		return x.ServerDesc
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetServerKey() string {
	if x != nil {
		return x.ServerKey
	}
	return ""
}

func (x *SsCmdRegisterServerRes) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SsCmdRegisterServerRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_ss_login_proto protoreflect.FileDescriptor

var file_ss_login_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x73, 0x73, 0x22, 0x78, 0x0a, 0x13, 0x53, 0x73, 0x43, 0x6d, 0x64, 0x4b, 0x69, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x78, 0x22, 0x78,
	0x0a, 0x13, 0x53, 0x73, 0x43, 0x6d, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x78, 0x22, 0x9c, 0x02, 0x0a, 0x16, 0x53, 0x73, 0x43,
	0x6d, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0xcc, 0x02, 0x0a, 0x16, 0x53, 0x73, 0x43, 0x6d,
	0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x73, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ss_login_proto_rawDescOnce sync.Once
	file_ss_login_proto_rawDescData = file_ss_login_proto_rawDesc
)

func file_ss_login_proto_rawDescGZIP() []byte {
	file_ss_login_proto_rawDescOnce.Do(func() {
		file_ss_login_proto_rawDescData = protoimpl.X.CompressGZIP(file_ss_login_proto_rawDescData)
	})
	return file_ss_login_proto_rawDescData
}

var file_ss_login_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ss_login_proto_goTypes = []any{
	(*SsCmdKickAccountReq)(nil),    // 0: ss.SsCmdKickAccountReq
	(*SsCmdKickAccountRes)(nil),    // 1: ss.SsCmdKickAccountRes
	(*SsCmdRegisterServerReq)(nil), // 2: ss.SsCmdRegisterServerReq
	(*SsCmdRegisterServerRes)(nil), // 3: ss.SsCmdRegisterServerRes
}
var file_ss_login_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ss_login_proto_init() }
func file_ss_login_proto_init() {
	if File_ss_login_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ss_login_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ss_login_proto_goTypes,
		DependencyIndexes: file_ss_login_proto_depIdxs,
		MessageInfos:      file_ss_login_proto_msgTypes,
	}.Build()
	File_ss_login_proto = out.File
	file_ss_login_proto_rawDesc = nil
	file_ss_login_proto_goTypes = nil
	file_ss_login_proto_depIdxs = nil
}
